{"ast":null,"code":"export const login = async (username, password) => {\n  if (username === 'kminchelle' && password === '0lelplR') {\n    const fakeToken = 'mock-jwt-token';\n    localStorage.setItem('token', fakeToken);\n    return {\n      token: fakeToken,\n      user: {\n        username\n      }\n    };\n  } else {\n    throw new Error('Invalid credentials');\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('token');\n};","map":{"version":3,"names":["login","username","password","fakeToken","localStorage","setItem","token","user","Error","logout","removeItem","isAuthenticated","getItem"],"sources":["C:/Users/DELL/Downloads/product_viewer_clean_full/src/services/authService.js"],"sourcesContent":["export const login = async (username, password) => {\n  if (username === 'kminchelle' && password === '0lelplR') {\n    const fakeToken = 'mock-jwt-token';\n    localStorage.setItem('token', fakeToken);\n    return { token: fakeToken, user: { username } };\n  } else {\n    throw new Error('Invalid credentials');\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\n\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('token');\n};\n"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAID,QAAQ,KAAK,YAAY,IAAIC,QAAQ,KAAK,SAAS,EAAE;IACvD,MAAMC,SAAS,GAAG,gBAAgB;IAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,SAAS,CAAC;IACxC,OAAO;MAAEG,KAAK,EAAEH,SAAS;MAAEI,IAAI,EAAE;QAAEN;MAAS;IAAE,CAAC;EACjD,CAAC,MAAM;IACL,MAAM,IAAIO,KAAK,CAAC,qBAAqB,CAAC;EACxC;AACF,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAC1BL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO,CAAC,CAACP,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}