{"ast":null,"code":"import axios from 'axios';\nconst USE_MOCK_LOGIN = true; // Set to true for mock login, false for DummyJSON\n\nexport const login = async (username, password) => {\n  if (USE_MOCK_LOGIN) {\n    // Mock login logic\n    if (username === 'kminchelle' && password === '0lelplR') {\n      const mockToken = 'mock-jwt-token';\n      localStorage.setItem('token', mockToken);\n      return {\n        token: mockToken,\n        user: {\n          username\n        }\n      };\n    } else {\n      throw new Error('Invalid credentials (mock)');\n    }\n  } else {\n    // Real DummyJSON login logic\n    const res = await axios.post('https://dummyjson.com/auth/login', {\n      username,\n      password\n    });\n    localStorage.setItem('token', res.data.token);\n    return res.data;\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('token');\n};","map":{"version":3,"names":["axios","USE_MOCK_LOGIN","login","username","password","mockToken","localStorage","setItem","token","user","Error","res","post","data","logout","removeItem","isAuthenticated","getItem"],"sources":["C:/Users/DELL/Downloads/product_viewer_clean_full/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst USE_MOCK_LOGIN = true; // Set to true for mock login, false for DummyJSON\n\nexport const login = async (username, password) => {\n  if (USE_MOCK_LOGIN) {\n    // Mock login logic\n    if (username === 'kminchelle' && password === '0lelplR') {\n      const mockToken = 'mock-jwt-token';\n      localStorage.setItem('token', mockToken);\n      return { token: mockToken, user: { username } };\n    } else {\n      throw new Error('Invalid credentials (mock)');\n    }\n  } else {\n    // Real DummyJSON login logic\n    const res = await axios.post('https://dummyjson.com/auth/login', {\n      username,\n      password,\n    });\n    localStorage.setItem('token', res.data.token);\n    return res.data;\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\n\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('token');\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAAG,IAAI,CAAC,CAAC;;AAE7B,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAIH,cAAc,EAAE;IAClB;IACA,IAAIE,QAAQ,KAAK,YAAY,IAAIC,QAAQ,KAAK,SAAS,EAAE;MACvD,MAAMC,SAAS,GAAG,gBAAgB;MAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,SAAS,CAAC;MACxC,OAAO;QAAEG,KAAK,EAAEH,SAAS;QAAEI,IAAI,EAAE;UAAEN;QAAS;MAAE,CAAC;IACjD,CAAC,MAAM;MACL,MAAM,IAAIO,KAAK,CAAC,4BAA4B,CAAC;IAC/C;EACF,CAAC,MAAM;IACL;IACA,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,kCAAkC,EAAE;MAC/DT,QAAQ;MACRC;IACF,CAAC,CAAC;IACFE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEI,GAAG,CAACE,IAAI,CAACL,KAAK,CAAC;IAC7C,OAAOG,GAAG,CAACE,IAAI;EACjB;AACF,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAC1BR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO,CAAC,CAACV,YAAY,CAACW,OAAO,CAAC,OAAO,CAAC;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}