{"ast":null,"code":"import api from './api';\n\n// Toggle this flag: false = use DummyJSON API | true = use mock login\nconst USE_MOCK_LOGIN = false;\nexport const login = async (username, password) => {\n  if (USE_MOCK_LOGIN) {\n    // Mock login path\n    if (username === 'kminchelle' && password === '0lelplR') {\n      const fakeToken = 'mock-jwt-token';\n      localStorage.setItem('token', fakeToken);\n      return {\n        token: fakeToken,\n        user: {\n          username\n        }\n      };\n    } else {\n      throw new Error('Invalid credentials');\n    }\n  } else {\n    // Real DummyJSON API path\n    const response = await api.post('/auth/login', {\n      username,\n      password\n    });\n    localStorage.setItem('token', response.data.token);\n    return response.data;\n  }\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('token');\n};","map":{"version":3,"names":["api","USE_MOCK_LOGIN","login","username","password","fakeToken","localStorage","setItem","token","user","Error","response","post","data","logout","removeItem","isAuthenticated","getItem"],"sources":["C:/Users/DELL/Downloads/product_viewer_clean_full/src/services/authService.js"],"sourcesContent":["import api from './api';\n\n// Toggle this flag: false = use DummyJSON API | true = use mock login\nconst USE_MOCK_LOGIN = false;\n\nexport const login = async (username, password) => {\n  if (USE_MOCK_LOGIN) {\n    // Mock login path\n    if (username === 'kminchelle' && password === '0lelplR') {\n      const fakeToken = 'mock-jwt-token';\n      localStorage.setItem('token', fakeToken);\n      return { token: fakeToken, user: { username } };\n    } else {\n      throw new Error('Invalid credentials');\n    }\n  } else {\n    // Real DummyJSON API path\n    const response = await api.post('/auth/login', { username, password });\n    localStorage.setItem('token', response.data.token);\n    return response.data;\n  }\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n};\n\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem('token');\n};\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,MAAMC,cAAc,GAAG,KAAK;AAE5B,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAIH,cAAc,EAAE;IAClB;IACA,IAAIE,QAAQ,KAAK,YAAY,IAAIC,QAAQ,KAAK,SAAS,EAAE;MACvD,MAAMC,SAAS,GAAG,gBAAgB;MAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,SAAS,CAAC;MACxC,OAAO;QAAEG,KAAK,EAAEH,SAAS;QAAEI,IAAI,EAAE;UAAEN;QAAS;MAAE,CAAC;IACjD,CAAC,MAAM;MACL,MAAM,IAAIO,KAAK,CAAC,qBAAqB,CAAC;IACxC;EACF,CAAC,MAAM;IACL;IACA,MAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,IAAI,CAAC,aAAa,EAAE;MAAET,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACtEE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEI,QAAQ,CAACE,IAAI,CAACL,KAAK,CAAC;IAClD,OAAOG,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAC1BR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO,CAAC,CAACV,YAAY,CAACW,OAAO,CAAC,OAAO,CAAC;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}